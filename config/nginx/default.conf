upstream my_server {
    server server:3000; # 要代理的宿主机 ip:port
    keepalive 2000;
}

server {
  listen 80;
  listen [::]:80;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;

  location / {
    root   /usr/share/nginx/html;
    index  index.html index.htm;
  }

  location ^~/api/ {					# url中包含api处理方法
    proxy_pass http://my_server;	# 如果去掉最后的 / ，返回给后端的请求中就会自动携带api/
  }

  location /socket.io/ {
    proxy_pass http://my_server/socket.io/;
    proxy_redirect off;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass_request_headers on;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_cache_bypass $http_upgrade;
  }

  location ^~/ws/ {					# url中包含ws处理方法
    #添加websocket代理
    proxy_pass http://my_server;	# 如果去掉最后的 / ，返回给后端的请求中就会自动携带ws/
    proxy_http_version 1.1;				# 必须配置1.1，官网上说的，使用http/1.1；
    proxy_set_header Upgrade $http_upgrade;	# 为了让Nginx代理服务器可以将来自客户端的Upgrade请求发送到后端服务器，要求Upgrade和Connection的头信息必须被显式的设置
    proxy_set_header Connection "Upgrade";	# 关于Connection，有两种方式，一种是直接写死，“upgrade”，强制连接升级；一种是对代理服务器的请求中“Connection”标头字段的值取决于客户端请求标头中“Upgrade”字段的值，相当于由客户端决定；
  }

}
